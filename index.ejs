<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <style>
      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  </head>
  <body>
    <div class="row">
      <div class="col">
        <h1 id="title"></h1>
        <ul id="messages"></ul>
        <form id="form" action="">
          <input id="input" autocomplete="off" /><button>Send</button>
        </form>
      </div>
      <div class="col">
        
        <h1 align="center">Active members</h1>
        <span class="border border-primary">
          
          <ul id="members">
  
          </ul>
        </span>
       
      </div>
    </div>
    
    
    
    <script src="/socket.io/socket.io.js"></script>


    <script>
        var userNsame=[]
        for(var i=0;i<userNsame.length;i++){
          if(userNsame[i]=="null"){
            location.reload()
          }
        }
        function displayMessage(username){
          
            
            alert("Welcome to rooom: "+username)
        }
        
      var socket = io();
      socket.emit('create',"room1")


      function appendmessage(msg){
        socket.emit('username',msg)
      }
      
      socket.on('connect',()=>{
        
        var userName=prompt("Please enter ur name")

        if(userName=="null"){
            location.reload()
        }
        userNsame.push(userName)
        

        displayMessage(`you connected with id : ${userName}`)
        socket.emit('memberslist',`${userName} Connected`)
        appendmessage(userName+" Connected")
      })
      socket.on("disconnect",()=>{
        socket.emit('chat-message',`${userNsame[0]} disconnected`)
        console.log(`${userNsame} disconnected`)
      })
      
      socket.on("connectToRoom",(data)=>{
        document.getElementById('title').innerHTML=data

      })
      socket.on('disconnect',()=>{
        console.log("user Disconnected")
      })
      

      var messages = document.getElementById('messages');

      var list=document.getElementById('lis');
      var form = document.getElementById('form');
      var input = document.getElementById('input');
      var members=document.getElementById('members')
      
      
     // document.getElementById('title').innerHTML="Active members: "+userNsame.length
      

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        if (input.value=="/exit") {
            socket.emit("kill",input.value)
            alert("Server Closed")
            window.location.replace("/home"); 
        }
        else if(input.value=="/leave"){
          socket.emit("leave",userNsame[0])
          alert(userNsame[0]+" Left the chat")
          window.location.replace("/home")
          socket.emit("chat-message",userNsame[0]+" Left the Chat")

        }
        else if(input.value=="" || input.value==null){
          alert("PLease enter your text")

        }
        else{
            socket.emit('chat-message', "From: "+userNsame[0]+"  Message: "+input.value+" ");
          input.value = '';
        }
      });

      //let count=0
      //setInterval(()=>{
        //socket.volatile.emit("ping",++count)
      //},1000)
      


      socket.on('chat-message', function(msg) {
        var item = document.createElement('li');
        item.textContent = msg;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
     // socket.on('user',(msg)=>{
      //  var p=document.createElement('li')
      //  p.textContent=msg
      //  console.log(msg)
      //  members.appendChild(p)
        

      //})
      socket.on('memberslist',(data)=>{
        var p=document.createElement('li')
        p.textContent=data
        members.appendChild(p)
        window.scrollTo(0, document.body.scrollHeight);

      })
      
      socket.emit("list",userNsame.length)
      
    </script>
    
    
  </body>
</html>